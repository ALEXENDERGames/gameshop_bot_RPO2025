import telebot
from telebot import types

bot = telebot.TeleBot("7791519532:AAGbG-AXgqCDn9NBDYD65FVdFeCddXIId8g")

admin_id = 475799956

users = []
#@bot.message_handler(content_types=["sticker"])
#def main(message):
#    bot.send_message(message.chat.id, message.sticker)
#    bot.send_sticker(message.chat.id, sticker="CAACAgIAAxkBAANJZ8-MjKtTxyn3cu8aKsriqptNL64AAmsVAAINFeFL3QhOXVKkrM82BA")
#bot.send_message(message.chat.id, message.from_user.id)
class Item:
    def __init__(self, name, dicription, photo, price, genre, age):
        self.name = name
        self.dicription = dicription
        self.photo = photo
        self.price = price
        self.genre = genre
        self.age = age

    def show_info(self, id):
        bot.send_photo(id, self.photo)

        buttons = types.InlineKeyboardMarkup()
        buy = types.InlineKeyboardButton("–∫—É–ø–∏—Ç—å", callback_data=self.name)
        buttons.add(buy)
        bot.send_message(id, f"<b>{self.name}</b>\n"
                             f"<b>–æ–ø–∏—Å–∞–Ω–∏–µ</b> \n {self.dicription} \n"
                             f"<b>–∂–∞–Ω—Ä</b> \n {self.genre} \n"
                             f"<b>–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ</b> \n {self.age} \n"
                             f"<b>—Ü–µ–Ω–∞: {self.price}</b>", reply_markup=buttons)

class User:
    def __init__(self, id, name, username):
        self.id = id
        self.name = name
        self.username = username
        self.age = None
        self.orders = []
        self.basket = []
        self.promocodes = ["newUser"]

    def show_info(self, id):
        bot.send_message(id, f"–∏–º—è: {self.name} \n"
                             f"username: {self.username} \n"
                             f"–≤–æ–∑—Ä–∞—Å—Ç: {self.age}")

    def show_orders(self):
        if len(self.orders):
            bot.send_message(self.id, "—Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤")
            for order in self.orders:
                bot.send_message(self.id, order)
        else:
            bot.send_message(self.id, "–≤—ã –µ—â–µ –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–∞–∑–∞–ª–∏")

    def show_basket(self):
        if len(self.basket):
            bot.send_message(self.id, "—Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ")
            for item in self.orders:
                bot.send_message(self.id, item)
        else:
            bot.send_message(self.id, "–≤—ã –µ—â–µ –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É")


@bot.message_handler(commands=["start", "help"])
def main(message):
    if check_user(message.from_user.id) == False:
        new_user = User(message.from_user.id,
                        message.from_user.first_name,
                        message.from_user.username)
        users.append(new_user)
        print(users)


    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞! "
                                      "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –∫—Ä—É—Ç—ã–µ –∏–≥—Ä—ã –ø–æ –æ—Ç–ª–∏—á–Ω—ã–º —Ü–µ–Ω–∞–º, —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è "
                                      "–∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É. üöÄ")

    menu_button = types.InlineKeyboardMarkup()
    shop = types.InlineKeyboardButton("–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã", callback_data="shop")
    admin = types.InlineKeyboardButton("–æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", callback_data="admin")
    edit_profile = types.InlineKeyboardButton("—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile")
    my_orders = types.InlineKeyboardButton("–º–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")
    user_profile = types.InlineKeyboardButton("–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ", callback_data="user_profile")

    for button in shop, admin, edit_profile, my_orders, user_profile:
        menu_button.row(button)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é", reply_markup=menu_button)



@bot.callback_query_handler(func=lambda callback: True)
def main(callback):
    print(callback)
    id = callback.message.chat.id

    match callback.data:
        case "shop":
            bot.send_message(id, "–°–ø–∏–æ–∫ –∏–≥—Ä: ")
        case "admin":
            bot.send_message(id, "–æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω—É")
            call_admin(callback.message)
        case "edit_profile":
            bot.send_message(id, "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        case "my_orders":
            bot.send_message(id, "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤")
        case "user_profile":
            for user in users:
                if user.id == callback.from_user.id:
                    user.show_info(user.id)
                    break
        case _:
            bot.send_message(id, "–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç, –ø—Ä–æ—Å–∏–º –ø—Ä–æ—â–µ–Ω–∏—è ‚òπ")

def call_admin(message):
    message = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É:")
    bot.register_next_step_handler(message, send_admin)

def send_admin(message):
    bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –æ–Ω —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è")
    bot.send_message(admin_id, f"–ó–∞–ø—Ä–æ—Å –æ—Ç @{message.from_user.username} \n"
                               f"–í–æ–ø—Ä–æ—Å: {message.text}")
def check_user(id):
    is_user = False
    for user in users:
        if user.id == id:
            is_user = True
            break
    return is_user
bot.polling()
